{% extends 'DarkTranslationBundle::layout.html.twig' %}
{% set path = app.request.get('path') %}
{% block add_menu %}
<div class="process">
    <div class="progress progress-inversed">
        <div class="bar bar-percents" style="width: 0%">
            <i class="info">~<i class="translated">0</i>% translated</i>
        </div>
    </div>
</div>

<ul class="nav pull-right">
    {% if isBuilt(path) %}
        <li><a href="{{ path('show', { 'path': path }) }}"><i class="icon-eye-open"></i> View html</a></li>
    {% endif %}
    <li><a href="#" class="save"><i class="icon-ok"></i> Save File</a></li>
    <li><a href="{{ info.dir ? path('list', { 'path': info.dir }) : path('browser') }}"><i class="icon-backward"></i> Back to list</a></li>
</ul>
{% endblock %}
{% block body %}

<div class="container info">
    <form method="POST" action="{{ path('save', { 'path': path }) }}" class="data">
        <div class="left span6">
            <textarea wrap="off" name="data" class="window first">{{ info.result }}</textarea>
        </div>

        <div class="span1 center">
            <table>
                <tr>
                    <td><ul class="left lines"></ul></td>
                    <td><ul class="right lines"></ul></td>
                </tr>
            </table>
        </div>

        <div class="right span6">
            <textarea wrap="off" class="window second">{{ info.source }}</textarea>
        </div>
    </form>

    <div class="bottom switcher">
        <ul class="left-side">
            <li class="active"><a href="#" class="auto-scroll">auto-scroll</a></li>
            <li class="active"><a href="#" class="trns-widget">translation widget</a></li>
        </ul>
        <ul class="right-side">
            <li><a href="#" class="1000">1000px</a></li>
            <li><a href="#" class="1150">1150px</a></li>
            <li class="active"><a href="#" class="1300">1300px</a></li>
            <li><a href="#" class="1500">1500px</a></li>
            <li><a href="#" class="1800">1800px</a></li>
        </ul>
    </div>

</div>

<div class="box-container"></div>

{% endblock %}

{% block js %}
<script src="{{ asset('/bundles/darktranslation/js/cookie.min.js') }}"></script>
<script src="{{ asset('/bundles/darktranslation/js/typing.min.js') }}"></script>
<script type="text/javascript">
$(function() {

    var leftWindowLine = 0;
    var isAutoScroll = 1;

    $('div.topbar').css('width', '1306px');

    $('.switcher .trns-widget').bind('click', function(){
        $('.box-container').toggle();
        $(this).parent().toggleClass('active');
    });

    $('.switcher .auto-scroll').bind('click', function(){
        isAutoScroll = isAutoScroll ? false : true;
        $(this).parent().toggleClass('active');
    });

    $('a.save').bind('click', function() {
        $('form.data').submit();
    });

    $('textarea.first').scroll(function() {
        linesNavigation($(this));
        $('ul.left').scrollTop($(this).scrollTop());

        if (!isAutoScroll) return;

        scrollSecond = $(this).scrollTop();
        $('.second').scrollTop(scrollSecond);
    });

    $('textarea.second').scroll(function() {
        $('ul.right').scrollTop($(this).scrollTop());
    });

    $('div.switcher .right-side a').live("click", function() {
        width = $(this).attr('class');
        $.cookie('window-width', width, { path: '/' });

        resizeContainer();
    });

    updateContents = function() {
        $("ul.left").html('');
        $("ul.right").html('');

        firstLines = $("textarea.first").val().split("\n").length;
        secondLines = $("textarea.second").val().split("\n").length;
        percent = (firstLines / secondLines) * 100;

        for (i = 1; i <= firstLines; i++) {
            $("ul.left").append("<li>" + i + "</li>");
        }

        for (i = 1; i <= secondLines; i++) {
            $("ul.right").append("<li>" + i + "</li>");
        }

        firstWords = $.trim($('textarea.first').val()).split(' ').length;
        secondWords = $.trim($('textarea.second').val()).split(' ').length;
        percent = (firstWords / secondWords) * 100;

        percent = Math.round(((firstLines + firstWords) / (secondLines + secondWords)) * 100);

        if (percent > 100) {
            percent = 100;
        }

        $('i.translated').text(percent);
        $('.bar-percents').css('width', percent + '%');

        $('ul.left').scrollTop($('textarea.first').scrollTop());
        $('ul.right').scrollTop($('textarea.second').scrollTop());
    }

    resizeContainer = function() {
        width = $.cookie('window-width');

        if (width > 0) {
            $('div.switcher .right-side li').removeClass('active');
            $('div.switcher .right-side a.' + width).parent().addClass('active');
        } else {
            width = 1300;
        }

        $('div.info').css('width', width);
        $('div.topbar').css('width', parseInt(width) + 6);
        $('div.left, div.right').css('width', ((width - 100) / 2) - 2);
        $('div.process').css('margin-left', (width - 1000) / 2.5);

        translationBox(leftWindowLine, 5);
    }

    $('textarea').typing({
        start: null,
        stop: function (event, $elem) {
            updateContents();
        },
        delay: 1
    });

    $('textarea.first').bind('click', function(){
        linesNavigation($(this));
    });

    $('textarea.first').keydown(function(e){
        var code = (e.keyCode ? e.keyCode : e.which);
        switch(code) {
            case 13: case 40:
                linesCount = $(this).val().split("\n").length;
                if (leftWindowLine == linesCount) return;
                leftWindowLine++;
                translationBox(leftWindowLine, 5);
                break;
            case 38:
                if (leftWindowLine == 1) break;
                leftWindowLine--;
                translationBox(leftWindowLine, 5);
                break;
        }
    });

    linesNavigation = function(object) {
        var currentChar = object[0].selectionEnd;
        var all = object[0].textLength;
        var currentLine = 0;

        for (i = 0; i <= all; i++) {
            var char = object.text()[i];

            if (char == "\n") {
                currentLine++;
            }
            if (i >= currentChar && char == "\n") {
                leftWindowLine = currentLine;
                translationBox(currentLine, 5);
                break;
            }
        }
    }

    translationBox = function(lineNum, linesCount) {
        if(leftWindowLine == 0) return;

        var target = $('textarea.first');
        var text = $('textarea.second').val();
        var currentLine = 1;
        var linesLimit = lineNum + linesCount;

        var textBox = $("<div class='translationBox'></div>");

        for (i = 0; i < text.length; i++) {
            var char = text[i];

            if (char == "\n") {
                currentLine++;

                if (currentLine == lineNum) {
                    continue;
                }
            }
            if (currentLine >= lineNum && currentLine <= linesLimit) {
                if (char == ' ') {
                    textBox.append('&nbsp;');
                    continue;
                }
                if (char == "\n") {
                    textBox.append('<br />');
                    continue;
                }

                textBox.append(char);
            }
        }

        if(target[0].scrollHeight > target.height()) {
            widthController = 16;
        } else {
            widthController = 0;
        }

        $('div.box-container').html(textBox.html()).css({
            'top': target.offset().top + (18 * lineNum) + 5 - target.scrollTop(),
            'left': target.offset().left + 1,
            'width': target.width() - widthController
        });

        boxOffset = $('div.box-container').offset().top + $('div.box-container').height();
        windowOffset = target.offset().top + target.height() + 8;

        if (boxOffset >= windowOffset) {
            heightController = $('div.box-container').height() - (boxOffset - windowOffset);
        } else {
            heightController = windowOffset - boxOffset + $('div.box-container').height();
            if (heightController > (18 * linesCount)) {
                heightController = 18 * linesCount;
            }
        }
        if (heightController < 0 || $('div.box-container').offset().top < target.offset().top) {
            heightController = 0;
        }

        $('div.box-container').css('height', heightController);
    }


    updateContents();
    resizeContainer();
});
</script>
{% endblock %}